name: CI

on:
  pull_request:
  push:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: freckle/stack-cache-action@v2
      - id: stack
        uses: freckle/stack-action@v3
        with:
          stack-arguments: --copy-bins
      - uses: freckle/weeder-action@v2
        with:
          ghc-version: ${{ steps.stack.outputs.compiler-version }}
      - uses: actions/upload-artifact@v3
        with:
          name: stack-bin
          path: |
            ${{ steps.stack.outputs.local-bin }}/bluebook

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: haskell/actions/hlint-setup@v2
      - uses: haskell/actions/hlint-run@v2
        with:
          fail-on: warning

  tag:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - id: tag
        uses: freckle/haskell-tag-action@v1
    outputs:
      tag: ${{ steps.tag.outputs.tag }}

  release:
    needs:
      - build
      - tag

    if: ${{ needs.tag.outputs.tag }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: stack-bin
          path: stack-bin

      - id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          release_name: Release ${{ needs.tag.outputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: stack-bin/bluebook
          asset_name: bluebook-linux-x64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
